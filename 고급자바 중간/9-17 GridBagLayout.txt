9- 17 GridbagLayout 

칸을 2차원 배열 모양으로 나눔

GridLayout은 몇행 몇열 선언해놓으면 이후 자동으로 들어가지만
GridbagLayout은 직접 어떤 칸에 넣을 건지 지정 가능

ex)
GridbagLayout gbl = new GridBagLayout();
contentPane.setLayout(gbl);	

JList style = new JList(model);  // GridbagLayout에 들어갈 부속 객체

GridBagConstraints gbc = new GridBagConstraints();	// Gridbag제약조건
gbc.fill = GridBagConstraints.BOTH;	// BOTH: 내부객체를 늘려 끝에 붙이기, property 여러가지 더 있음
gbc.weightx = 0;	// 화면이 늘어날때 부속품크기변화, 0이면 가로로는 늘어나지마라
gbc.weighty = 100;	  // 100이면 화면따라서 같이 늘어나라
gbc.anchor = GridBagConstraints.CENTER; // 해당칸 내에 부속품의 정렬위치, NORTH같은 것도 가능

add(style, gbc, 0, 0, 1, 3);	// 2차원배열에서 [0,0]위치에서 가로로1칸, 세로로3칸 차지

public void add(Component c, GridBagConstraints gbc, int x, int y, int w, int h){
  gbc.gridx = x;
  gbc.gridy = y;
  gbc.gridwidth = w;
  gbc.gridheight = h;
  getContentPane().add(c, gbc);
}	// 임의로 만든 함수

