1121 운영체제 가상 기억장치3

페이징 시스템의 주기억장치관리
- 주기억장치관리 테이블
1) page frame number 0, 1, 2, 3, ....
2) allocated : 0 or 1
3) PID : 어떤 프로세스가 사용중인지
4) link

- 단점 : 페이지 공유 _크기로만 분할해서 논리적 관리가 어려움
-------------------------------------------------------------------------

세그먼테이션 시스템
- 프로그램을 블럭 단위로 분할할 때 논리적인 단위로 서로 다른크기로 분할
- 주기억장치 영역을 미리 분할해 둘 수 없음 _빈 공간을 찾아 적재(최적 적합 그런거 해야됨)
- 주기억장치 할당을 위한 배치 기법 : 최초적합, 최적, 최악, 순환최초
- 페이징은 같은 크기로 나눠져있지만 세그먼테이션은 그때그때달라서 기억장치자료구조가 복잡함
- 세그먼트 공유나 보호가 쉬움
- 주소 사상 기법 _페이징 시스템과 유사
: 직접 사상, 연관 사상, 혼합 사상
- 용어 :
블럭 : 세그먼트 
블럭번호 : 세그먼트 번호
* 가상주소 (s, d)
s _세그먼트번호(논리적 주소)
d _변위
* SMT : 세그먼트 사상 테이블
* SMT구조 :
세그먼트번호 _구조체배열 index번호
존재비트 _주기억장치에 적재 여부
실주소 _메모리에 세그먼트가 할당된 시작주소
세그먼트길이 _세그먼트길이	// 페이징시스템에 없었음
보호비트 _각 세그먼트마다 접근권한(R/W/X/A) // 페이징시스템에 없었음, A는 Append




직접 사상
- 과정 :
가상주소를 가지고 SMT를 찾아가 존재비트가 1인지 확인후, 
변위가(한 블록안의 상대주소가) SMT의 세그먼트길이보다(메모리의 블록하나의 크기보다)
큰경우 exception
보호필드에서 권한 검사, 허가되지 않은 연산일시 exception

세그먼트 적재주소를 인출하고 변위와 더하여 실주소 형성(페이징시스템은 논리적으로 변위와 곱셈인데 변위앞에다 써주면 곱셈한 결과가 됨)



혼합 기법에서의 직접사상(페이징/세그먼테이션 혼합 기법)
* 페이징시스템 : 단순하지만 논리적분할개념이 없고 페이지 공유등의 문제
세그먼테이션시스템 : 논리적으로 분할하고 세그먼트의 공유가 쉽지만 관리 오버헤드가 증가
-> 둘을 혼합
- 먼저 세그먼트단위로 분할한고 그걸 각각 페이지로 쪼개서 페이지단위로 메모리 할당
ex) Seg1_p0, Seg1_p1, Seg1_p2 / Seg2_p0, Seg2_p1, Seg2_p2 / ...

- 주소 사상
가상주소
v = (s, p, d)
s _세그먼트번호
p _해당 세그먼트에서의 페이지번호
d _해당 페이지에서의 변위
* 각 프로세스마다 하나의 SMT존재, 프로그램의 세그먼트 개수만큼 PMT존재
-> SMT의 각 세그먼트에 그 세그먼트의 PMT의 주소가 있음
-> 존재비트는 SMT에 없고 PMT에 존재
* 주기억장치는 페이지 프레임단위로 미리 분할됨

- 알고리즘
1. 가상주소 v = (s, p, d)에서 s, p로 페이지프레임번호를 찾음 _몇번째 세그먼트의 몇번째 페이지를 찾으면 전체에서의 위치가 나오므로
2. 페이지프레임번호 p'로 (p', d)가 됨, 이걸로 페이징시스템처럼 사상하면 끝
=> 밑에 퀴즈에 예시


혼합 기법에서의 연관사상
* 페이징시스템의 연관사상에선 CAM을 씀
- 여기서는 SMT과 PMT를 따로 할 필요 없음
- key에 세그먼트번호와 페이지번호 (s, p)를 key로 사용하면 페이지프레임넘버를 한번에 찾음

혼합기법 장점: 주기억장치 관리의 단순성, 효율성, 프로그램 공유문제해결, 사상과정이복잡하고 사상테이블크기가 커짐

퀴즈 
[12주차 가상기억장치3 21:05] 
- 페이징시스템이면 : 가상주소(3, 80)이므로 3을 따라가서 나온 150으로 바꿔줌, 그리고 변위앞에써줌 _15080
- 세그멘테이션시스템이면 : 위에서 나온 150을 변위에 더해줌(페이징은 논리적으로 곱셈, 세그는 덧셈) _ 150 + 80 = 230 -> 16진수시래

[12주차 가상기억장치3 22:00]
2) 1000바이트가 한 페이지, 총 11900바이트인 프로그램이 올라오면 1000페이지 12개가 만들어지므로 마지막 페이지에 100만큼 남음 _답: 100

[12주차 가상기억장치3 24:10]

[12주차 가상기억장치3 24:30]














