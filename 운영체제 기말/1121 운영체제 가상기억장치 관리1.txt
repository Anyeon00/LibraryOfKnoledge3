1121 운영체제 가상기억장치 관리1

가상기억장치
- 개념 : 필요한부분만 비연속적으로 가져오는 방식
- 목적 : 성능 최적화

- 비용 모델 : 페이지 부재(fault) 발생 빈도(필요한 페이지가 메모리에 없을때)(디스크에서 메모리로 불러와야함)
그럼 block시켜야하는데 커널이 개입되므로 커널의 개입을 최소화
* 페이지 참조 스트링 : 프로세스실행동안 접근한 페이지 번호를 나열한것
- 구하는 공식 : 부재율 = fault가 발생하는 횟수 / (전체 페이지 참조하는 횟수)페이지참조스트링길이



*이 부재율을 줄이는 방법*

하드웨어적 요소
- 주소 사상 장치

- 비트 벡터 : 페이지프레임마다 참조 비트 1개, 갱신 비트 1개를 추가
-- 참조비트 _최근에 참조된 페이지프레임이면 1(주기적으로 모든 참조비트를 0으로 reset함)
-- 갱신비트 _페이지프레임의 내용이 갱신되었으면 1(변경내용을 디스크에 저장하고 0으로)

소프트웨어적 요소(관리 기법)
- 할당 기법, 호출 기법, 배치 기법, 교체 기법, 소거 기법, 부하 조정 기법
-- 할당 기법 : 각 프로세스에 할당해줄 주기억장치 양을 결정하는 기법(너무 많이 해주면 메모리낭비, 적게하면 fault발생증가)
> 고정 할당, 가변 할당
-- 호출 기법 : 특정 페이지를 주기억장치에 언제 적재할것이냐
> 요구 호출 _당장 필요한 것만 적재
> 예측 호출 _앞으로 필요할 것 같은 페이지를 미리 적재
-- 배치 기법 : 주 기억장치의 어느 빈 페이지 프레임에 적재할거냐
(페이징 시스템에는 불필요, 세그먼테이션에서만 적용)
> 최초 적합, 최적 적합, 최악 적합, 순환 최초 적합 전략
-- 교체 기법 : (fault발생시) 새로운 페이지를 메모리에 적재해야하는데, 메모리가 꽉차있을때 적재되어있는 페이지와 교체하는 기법
> 여러가지잇음
-- 소거 기법 : 변경된 페이지의 내용을 언제 디스크에 저장할것인가(갱신비트에 나온얘기)
> 요구 소거 _메모리를 내놓아야할때 즉 마지막에 한번만 저장
> 예측 소거 _더이상 변경이 안될것같다고 예측하면 그냥 저장하기
-- 부하 조정 기법 : 다중프로그래밍 정도(메모리에 프로세스몇개까지 올릴거냐)를 조정하는 기법
* 스레싱thrathing : 너무 많은 프로그램이 메모리에 올라와서 fault가 과도하게 발생하는 현상

* 할당기법과 교체기법을 주로 다룸 _부재율에 가장 큰 영향


* 지역성
- 시간 지역성 : 한번 실행된 명령은 곧 재실행될 가능성 높음
- 공간 지역성 : 접근된 데이터 부근의 데이터들이 접근 가능성 높음




고정할당 기반(에서)의 교체 기법
* 고정할당 : 각 프로세스에게 페이지 갯수를 정해줌 _넌 페이지 3개로 실행해
* 교체기법 : 위에 교체기법 설명 참고

MIN  알고리즘
- 현재시점 이후로 가장 오래동안 참조되지 않을 페이지를 교체
- 그걸 예측할 수 없으므로 실현 불가능
- 알고리즘
[운영체제 12주차 가상기억장치관리1 23:41] 참고

무작위 알고리즘
- 랜덤으로 교체할 페이지 선정





