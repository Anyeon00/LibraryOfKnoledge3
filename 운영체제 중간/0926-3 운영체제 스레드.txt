0926-3 운영체제 스레드

스레드(Tread)란
- 프로세스안에 여러개의 thread가 존재
- 실행주체(thread)가 여러개가 되어 한 프로세스안에서도 여러개 작업을 할 수 있음(경량 프로세스)
- 스레드들이 공유(한 프로세스 내): code, data, file등
- 각 스레드마다 따로 구성: Thread ID, Stack, Program counter/resgister set(문맥교환에 관한것)
*scheduler가 각 스레드를 대상으로 schdule하여 running상태등으로 전이시킴(실행주체가 thread가 됨)
*부모 프로세스가 자식프로세스를 만들어 사용하는 방식에는 부모자식간 data를 복사해주는데
thread는 프로세스에서 data를 공유하므로 자원절약가능

스레드의 이점
- 응답성 : 한 스레드가 blocked되더라도 다른 스레드는 작업가능
- 자원공유 : 위의 설명대로 한프로세스내에서 자원을 공유함
- 경제성 : 자원공유와 마찬가지로 자식프로세스를 만드는 것보다 경제성이 좋음

* 8:12초 퀴즈?

스레드이용예시)	
- 서버에 클라이언트들이 서비스 요청시
서버의 메인스레드가 직접 받으면 하나씩 처리하므로 클라이언트들이 대기해야됨
-> 클라이언트 요청마다 스레드를 생성하여 처리
-> 요청마다 생성하고 반납하고 반복하는 일이 비효율적
-> 예상되는 요청수만큼 스레드를 미리 만들어놓음
(blocked상태에서 기다림, 요청이 들어오면 하나를 wakeup시켜서 시키고 다시 blocked)


커널이 스레드를 지원하지 않는경우
- user영역에서 구현
- 스케줄러는 kernel에서 프로세스만 인식하고, 스레드는 각 프로세스내에서 관리됨

커널이 스레드를 지원하는 경우
- kernel에 있는 스케줄러가 각 스레드 단위로 관리(schedule)해줄 수 있음


* 총 스레드 갯수: 생성된 스레드 n개 + 메인스레드 1개










