1009-3 운영체제 동기화3


생산자-소비자 문제
- 버퍼가 공유변수
- 생산자: buffer에 data를 삽입
- 소비자: buffer에 data를 꺼내서 사용
ex) 생산자: 주문을 생산
     소비자(배송팀): 주문을 꺼내서 처리

데이터를 넣는연산
-> 하나가 아니라 여러개의 코드
-> 자료구조 큐에 포인터를 옮기고, 삽입
이 사이에 문맥교환이 일어나면 문제 발생


단일 버퍼의 경우 : 하나를 넣고 빠지는지 확인후 그 담걸 넣음	// 생산자와 소비자간 상호배제

원형 다중 버퍼의 경우 : 큐가 다 찼는지 확인 _circular queue이용	
// 생산자들끼리 소비자들끼리 상호배제 + 생산자와 소비자간에도 상호배제
- 변수 in, out : 생산자들은 변수 in을 이용해 삽입, 소비자는 out을 이용해 꺼냄
(포인터변수역할, 공유변수 Critical Section)
ex) 생산자1이 buffer에 data입력후 in++
- mutexP : 생산자간 상호배제 세머퍼(in변수)
- empty, full: 생산자와 소비자간 상호배제 세머퍼(빈 버퍼갯수, 채워져있는 버퍼갯수)
// 사실 이 세머퍼들 구분 잘 모르겠음, 젤 밑에 문제만 풀수 있으면 될듯

다중버퍼 ex) 생산자1번
While(1){
  P(mutexP);	// 다른 생산자 배제
  P(empty);	// 소비자쪽 배제
  buffer[in] = M;	// 생산자-소비자 공유데이터 buffer이용, 생산자끼리 공유데이터 in이용
  in++;		// circular queue인 buffer에 data하나 삽입했으므로 삽입포인터 ++
  V(full);		// 소비자쪽 배제해제
  V(mutexP);	// 다른 생산자 배제해제
}


[7주차 동기화3 플립 21:10 다중버퍼문제]
[7주차 동기화3 플립 24:00 P()V()연산역할]
[7주차 동기화3 플립 24:35 mutexP세머퍼 역할]
[7주차 동기화3 플립 25:30 ...]







